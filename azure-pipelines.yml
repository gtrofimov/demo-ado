# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

# Set Up Project
steps:
- script: |
    mkdir temp 
    echo ${PWD}
    cp -R $(soatest.project) temp/.
    
    # Set Up and write localsetting.properties file
    echo $"
    license.network.auth.enabled=true  
    license.network.password=$(license.server.password)
    license.network.url=$(license.server.url)
    license.network.use.specified.server=true
    license.network.user=admin
    soatest.license.network.edition=automation_edition
    soatest.license.use_network=true
    virtualize.license.network.edition=performance_server_edition
    virtualize.license.use_network=true" >> temp/soatestcli.properties
    ls -R
    cat temp/soatestcli.properties
  displayName: "Set Up the temp/soatestcli.properties file"

# Mount Settings and Tests and Run
- script: |
    ls -R
    docker --version
    
    docker run -t \ 
    -e ACCEPT_EULA=false \
    -v "$(pwd)/temp:/temp" \
    parasoft/soavirt \
    soatestcli \
    -localsettings /temp/soatestcli.properties \
    -data /soavirt/workspace \
    -import /temp/Demo

    docker exec -i \
    -e ACCEPT_EULA=true \
    -v "$(pwd)/temp:/temp" \
    parasoft/soavirt /bin/bash -c " \
    ls -R; \
    ls /temp; \
    cat /temp/soatestcli.properties; \
    soatestcli \
    -data /soavirt/workspace \
    -resource /Demo \
    -config 'builtin://Example Configuration' \
    -localsettings /temp/soatestcli.properties \
    -report /soavirt/report/
    "
  displayName: Mount the Project contents to SOAtest CLI Docker Container adn Run tests 