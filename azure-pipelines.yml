# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

# Set Up Project
steps:
- script: |
    mkdir temp
    echo ${PWD}
    cp -R $(soatest.project) temp/.
    
    # Set Up and write localsetting.properties file
    echo $"
    license.network.auth.enabled=true  
    license.network.password=$(license.server.password)
    license.network.url=$(license.server.url)
    license.network.use.specified.server=true
    license.network.user=admin
    soatest.license.network.edition=automation_edition
    soatest.license.use_network=true
    virtualize.license.network.edition=performance_server_edition
    virtualize.license.use_network=true" >> temp/soatestcli.properties
    ls -R
    cat temp/soatestcli.properties
  displayName: Setting Up Build Configs

# Mount Settings and Tests and Run
- script: |
    ls -R
    docker --version

    docker run -i \
    -u 0:0 \
    -e ACCEPT_EULA=true \
    -v "$(pwd)/temp:/temp" \
    parasoft/soavirt /bin/bash -c " \
    ls -laR /temp; \
    chmod -R 777 /temp; \
    chown -R parasoft:parasoft; \
    soatestcli \
    -localsettings /temp/soatestcli.properties \
    -import /temp/Demo; \
    ls -laR /temp; \
    cat /temp/soatestcli.properties; \
    soatestcli \
    -resource /Demo \
    -config 'user://Example Configuration' \
    -localsettings /temp/soatestcli.properties \
    -report /temp"

  displayName: SOATest
  env:
    pwd: $(Build.Repository.LocalPath)

# Publish Test Results
- task: PublishParasoftTestResults@1
  
  displayName: Publish SOAtest Test Results
  inputs:
    testRunner: 'SOAtest9x'
    testResultsFiles: '$(Build.Repository.LocalPath)/temp/rep*.xml'