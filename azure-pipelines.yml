# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

# Set Up Project
steps:
- script: |
    echo $"license.network.auth.enabled=true
    license.network.password=$(licensePassword)
    license.network.url=$(licenseServerUrl)
    license.network.use.specified.server=true
    license.network.user=admin
    soatest.license.network.edition=automation_edition
    soatest.license.use_network=true
    virtualize.license.network.edition=performance_server_edition
    virtualize.license.use_network=true" >> localsettings.properties
    cat localsettings.properties
  env: 
    licenseServerUrl: $(license.server.url)
    licensePassword: parasoft.vm
  displayName: "Set Up the localsettings.properties file"

# Mount Settings and Tests and Run
- script: |
    ls -R
    docker --version
    docker run -i \
    -e ACCEPT_EULA=true \
    -v $(workingDirectory):/mnt \
    parasoft/soavirt /bin/bash -c " \
    ls /mnt/conf; \
    cat /mnt/conf/soatest.properties; \
    soatestcli \
    -config 'user://Example Configuration' \
    -resource TestAssets \
    -settings /mnt/conf/soatest.properties \
    "
  workingDirectory: $(Pipeline.Workspace)
  displayName: Mount the Project contents to SOAtest CLI Docker Container adn Run tests 

### Import project into the workspace
# - task: Docker@2
#   displayName: run
#   inputs: 
#     command: run
#     arguments: '-t --network=host -e ACCEPT_EULA=true -v ${pwd}/Demo:/mnt/Demo parasoft/soavirt soatestcli -import /mnt/Demo'

### Run Project
# - task: Docker@2
#   displayName: run
#   inputs: 
#     command: run
#     arguments: '-t --rm --network=host -e ACCEPT_EULA=true -v ${pwd}/Demo:/mnt/Demo parasoft/soavirt soatestcli -property soatest.license.use_network=true -property license.network.url=$(license.server.url) -property license.network.use.specified.server=true -property license.netwrok.auth.enabled=true -property license.network.user=admin -property license.network.password=$(license.server.password) -property soatest.license.network.edition=automation_edition -config "user:// Example Configuration" -resource Demo'